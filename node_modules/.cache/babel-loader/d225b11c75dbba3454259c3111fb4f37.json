{"ast":null,"code":"var _jsxFileName = \"/Users/zili/project3/src/AddJob.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./style/LoginRegister.css\";\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  v4: uuid\n} = require('uuid');\n\nexport default function AddJob(props) {\n  _s();\n\n  const navigate = useNavigate();\n  const username = useSelector(state => state.username);\n  const [errorMsg, setError] = useState(null);\n  const [jobForm, setJobForm] = useState({\n    id: uuid(),\n    title: '',\n    location: '',\n    companyName: '',\n    description: '',\n    employerEmail: '',\n    companyLink: null,\n    postdate: new Date().toISOString().split(\"T\")[0],\n    owner: username\n  });\n  const [myJob, setMyJob] = useState([]);\n\n  function createForm() {\n    if (!jobForm) {\n      setError(\"Please fill out the form.\");\n      return;\n    }\n  }\n\n  function getMyJob() {\n    axios.get('/api/jobs/findAll').then(response => setMyJob(response.data)).catch(error => console.log(error));\n  }\n\n  function checkLogin() {\n    if (!username) {\n      navigate('/login');\n    } else {\n      return;\n    }\n  }\n\n  useEffect(checkLogin, []);\n  useEffect(getMyJob, []);\n\n  function onSubmitAddJobButtonClick() {\n    if (!(jobForm.title && jobForm.location && jobForm.companyName && jobForm.description && jobForm.employerEmail)) {\n      setError(\"You must fill all the fields except company link\");\n      return;\n    }\n\n    axios.post(\"/api/jobs/create\", jobForm).then(response => {\n      getMyJob();\n      navigate(\"/job/\" + jobForm.id);\n      console.log(response);\n    }).catch(error => console.error(error));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"job-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: jobForm.title,\n        onChange: e => setJobForm({ ...jobForm,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Location:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: jobForm.location,\n        onChange: e => setJobForm({ ...jobForm,\n          location: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Company Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: jobForm.companyName,\n        onChange: e => setJobForm({ ...jobForm,\n          companyName: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: jobForm.description,\n        onChange: e => setJobForm({ ...jobForm,\n          description: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"EmployerEmail:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: jobForm.employerEmail,\n        onChange: e => setJobForm({ ...jobForm,\n          employerEmail: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Company Link:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"optional\",\n        value: jobForm.companyLink,\n        onChange: e => setJobForm({ ...jobForm,\n          companyLink: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \" Post Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: jobForm.postdate,\n        onChange: e => setJobForm({ ...jobForm,\n          postdate: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), errorMsg, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSubmitAddJobButtonClick,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddJob, \"xLHwKSpyHICK+ZaiTEMd2pgd3C0=\", false, function () {\n  return [useNavigate, useSelector];\n});\n\n_c = AddJob;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddJob\");","map":{"version":3,"sources":["/Users/zili/project3/src/AddJob.jsx"],"names":["axios","React","useState","useEffect","useNavigate","useSelector","useDispatch","v4","uuid","require","AddJob","props","navigate","username","state","errorMsg","setError","jobForm","setJobForm","id","title","location","companyName","description","employerEmail","companyLink","postdate","Date","toISOString","split","owner","myJob","setMyJob","createForm","getMyJob","get","then","response","data","catch","error","console","log","checkLogin","onSubmitAddJobButtonClick","post","e","target","value"],"mappings":"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","sourcesContent":["import \"./style/LoginRegister.css\";\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router';\nimport { useSelector, useDispatch } from \"react-redux\";\nconst { v4: uuid } = require('uuid');\n\nexport default function AddJob(props) {\n    const navigate = useNavigate();\n    const username = useSelector(state => state.username);\n    const [errorMsg, setError] = useState(null);\n    const [jobForm, setJobForm] = useState({\n        id: uuid(),\n        title: '',\n        location: '',\n        companyName: '',\n        description: '',\n        employerEmail: '',\n        companyLink: null,\n        postdate: new Date().toISOString().split(\"T\")[0],\n        owner: username,\n    });\n\n    const [myJob, setMyJob] = useState([])\n\n    function createForm() {\n        if (!jobForm) {\n            setError(\"Please fill out the form.\");\n            return;\n        }\n    }\n\n    function getMyJob() {\n        axios.get('/api/jobs/findAll')\n            .then(response => setMyJob(response.data))\n            .catch(error => console.log(error));\n    }\n\n\n    function checkLogin() {\n        if (!username) {\n            navigate('/login')\n        } else {\n            return;\n        }\n    }\n\n    useEffect(checkLogin, []);\n    useEffect(getMyJob, []);\n\n    function onSubmitAddJobButtonClick() {\n        if (\n            !(\n                jobForm.title &&\n                jobForm.location &&\n                jobForm.companyName &&\n                jobForm.description &&\n                jobForm.employerEmail\n            )\n        ) {\n            setError(\"You must fill all the fields except company link\");\n            return;\n        }\n\n        axios\n            .post(\"/api/jobs/create\", jobForm)\n            .then((response) => {\n                getMyJob();\n                navigate(\"/job/\" + jobForm.id);\n                console.log(response);\n            })\n            .catch((error) => console.error(error));\n    }\n\n    return (\n        <section className=\"job-container\">\n\n            <div>\n                <h5>Title:</h5>\n                <input value={jobForm.title}\n                    onChange={e => setJobForm({\n                        ...jobForm,\n                        title: e.target.value\n                    })} ></input>\n                <h5>Location:</h5>\n                <input value={jobForm.location}\n                    onChange={e => setJobForm({\n                        ...jobForm,\n                        location: e.target.value\n                    })} ></input>\n                <h5>Company Name:</h5>\n                <input value={jobForm.companyName}\n                    onChange={e => setJobForm({\n                        ...jobForm,\n                        companyName: e.target.value\n                    })} ></input>\n\n                <h5>Description:</h5>\n                <textarea value={jobForm.description}\n                    onChange={e => setJobForm({\n                        ...jobForm,\n                        description: e.target.value\n                    })} ></textarea>\n\n                <h5>EmployerEmail:</h5>\n                <input value={jobForm.employerEmail}\n                    onChange={e => setJobForm({\n                        ...jobForm,\n                        employerEmail: e.target.value\n                    })} ></input>\n\n                <h5>Company Link:</h5>\n                <input placeholder=\"optional\" value={jobForm.companyLink}\n                    onChange={e => setJobForm({\n                        ...jobForm,\n                        companyLink: e.target.value\n                    })} ></input>\n\n                <h5> Post Date:</h5>\n                <input value={jobForm.postdate}\n                    onChange={e => setJobForm({\n                        ...jobForm,\n                        postdate: e.target.value\n                    })} ></input>\n                <br />\n                {errorMsg}\n                <br />\n                <br />\n                <button onClick={\n                    onSubmitAddJobButtonClick\n                }>\n                    Submit\n                </button>\n            </div>\n        </section>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}