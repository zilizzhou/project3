{"ast":null,"code":"var _jsxFileName = \"/Users/zili/project3/src/JobDetails.jsx\";\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { useNavigate } from 'react-router';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"./style/Job.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function () {\n  const jobId = useParams().jobId;\n  const [job, setJob] = useState(null);\n  const [currentUserName, setCurrentUserName] = useState('');\n  const [currentUser, setCurrentUser] = useState('');\n  const navigate = useNavigate();\n  const state = useSelector(state => state);\n  const username = useSelector(state => state.username);\n  const [isFavorited, setIsFavorited] = useState();\n  const [myfavoriteJobsListID, setMyFavoriteJobsListID] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState([]);\n\n  function checkLogin() {\n    axios.get('/api/users/whoIsLoggedIn').then(response => {\n      setCurrentUserName(response.data);\n    }).catch(() => navigate('/login'));\n  }\n\n  function getUserFavoriteJobIDList() {\n    axios.get('/api/users/findMyFavorites/' + username).then(response => {\n      setMyFavoriteJobsListID(response.data);\n    }).catch(error => console.error(error));\n  }\n\n  useEffect(getUserFavoriteJobIDList, []);\n  setTimeout(() => {\n    for (let id of myfavoriteJobsListID) {\n      console.log(id);\n\n      if (jobId == id) {\n        setIsFavorited(true);\n      } else {\n        setIsFavorited(false);\n      }\n    }\n  }, 500);\n\n  function findJobDetails() {\n    axios.get('/api/jobs/find/findById/' + jobId).then(response => setJob(response.data)).catch(error => console.log(\"Could not find Job\"));\n  }\n\n  useEffect(findJobDetails, []);\n  const favoriteButtonComponent = isFavorited ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \" Unfavorite\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        axios.post('/api/users/addMyFavoriteJob/' + username, jobId).then(response => {\n          console.log(response);\n          setIsFavorited(!isFavorited);\n        }).catch(error => console.log(error));\n      },\n      children: \" Favorite\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n  const funcComp = username == state.jobOwner ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        axios.post('/api/jobs/delete/' + jobId).then(response => {\n          console.log(\"Success delete!\");\n          navigate('/');\n        }).catch(error => console.log(error));\n      },\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/editJob/' + jobId),\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  const jobDetailComponent = job ? job.map(j => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Job Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 27\n        }, this), \" \", j.title, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Company:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 27\n        }, this), \" \", j.companyName, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Location:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 27\n        }, this), \" \", j.location, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 27\n        }, this), \" \", j.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Employer Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 27\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"mailto:m.bluth@example.com\",\n          children: j.employerEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 50\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this), j.companyLink && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Company Link:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 45\n        }, this), j.companyLink, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Post Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 27\n        }, this), \" \", j.postdate, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true);\n  }) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \" No Job found \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 10\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"favoriate_result\",\n      children: \"Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"job-detail\",\n      children: [jobDetailComponent, favoriteButtonComponent, funcComp]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/Users/zili/project3/src/JobDetails.jsx"],"names":["axios","React","useEffect","useState","useParams","useNavigate","useSelector","useDispatch","jobId","job","setJob","currentUserName","setCurrentUserName","currentUser","setCurrentUser","navigate","state","username","isFavorited","setIsFavorited","myfavoriteJobsListID","setMyFavoriteJobsListID","isLoggedIn","setIsLoggedIn","checkLogin","get","then","response","data","catch","getUserFavoriteJobIDList","error","console","setTimeout","id","log","findJobDetails","favoriteButtonComponent","post","funcComp","jobOwner","jobDetailComponent","map","j","title","companyName","location","description","employerEmail","companyLink","postdate"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { useNavigate } from 'react-router';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"./style/Job.css\";\n\nexport default function () {\n    const jobId = useParams().jobId;\n    const [job, setJob] = useState(null);\n    const [currentUserName, setCurrentUserName] = useState('');\n    const [currentUser, setCurrentUser] = useState('');\n    const navigate = useNavigate();\n    const state = useSelector((state) => state);\n    const username = useSelector(state => state.username);\n    const [isFavorited, setIsFavorited] = useState();\n    const [myfavoriteJobsListID, setMyFavoriteJobsListID] = useState([]);\n    const [isLoggedIn, setIsLoggedIn] = useState([]);\n\n    function checkLogin() {\n        axios.get('/api/users/whoIsLoggedIn')\n            .then((response) => {\n                setCurrentUserName(response.data);\n            })\n            .catch(() => navigate('/login'))\n    }\n\n    function getUserFavoriteJobIDList() {\n        axios.get('/api/users/findMyFavorites/' + username)\n            .then(response => {\n                setMyFavoriteJobsListID(response.data);\n            })\n            .catch(error => console.error(error));\n    }\n\n    useEffect(getUserFavoriteJobIDList, []);\n\n    setTimeout(() => {\n        for (let id of myfavoriteJobsListID) {\n            console.log(id);\n            if (jobId == id) {\n                setIsFavorited(true);\n            } else {\n                setIsFavorited(false);\n            }\n        }\n    }, 500)\n\n\n    function findJobDetails() {\n        axios.get('/api/jobs/find/findById/' + jobId)\n            .then(response => setJob(response.data))\n            .catch(error => console.log(\"Could not find Job\"));\n    }\n    useEffect(findJobDetails, []);\n\n    const favoriteButtonComponent = (isFavorited) ?\n        (<>\n            <button> Unfavorite</button>\n        </>)\n        : (<>\n            <button\n                onClick={() => {\n                    axios.post('/api/users/addMyFavoriteJob/' + username, jobId)\n                        .then((response) => {\n                            console.log(response);\n                            setIsFavorited(!isFavorited);\n                        })\n                        .catch((error) => console.log(error))\n                }}\n            > Favorite</button>\n        </>);\n\n\n    const funcComp = (username == state.jobOwner) ?\n        (<>\n            <button\n                onClick={() => {\n                    axios.post('/api/jobs/delete/' + jobId)\n                        .then((response) => {\n                            console.log(\"Success delete!\");\n                            navigate('/')\n                        })\n                        .catch((error) => console.log(error))\n                }}\n            >Delete</button>\n            <button onClick={() => navigate('/editJob/' + jobId)}>Edit</button>\n        </>)\n        : (<></>);\n\n    const jobDetailComponent = job ?\n        (\n            job.map(j => {\n                return (<>\n\n                    <div> <b>Job Title:</b> {j.title} </div>\n                    <div> <b>Company:</b> {j.companyName} </div>\n                    <div> <b>Location:</b> {j.location} </div>\n                    <div> <b>Description:</b> {j.description}</div>\n                    <div> <b>Employer Email:</b> <a href=\"mailto:m.bluth@example.com\">{j.employerEmail}</a> </div>\n                    {j.companyLink && <div> <b>Company Link:</b>{j.companyLink} </div>}\n                    <div> <b>Post Date:</b> {j.postdate} </div>\n\n                </>)\n            })\n        ) :\n        (<div> No Job found </div>);\n\n    return (\n        <div>\n            <h1 className=\"favoriate_result\">Details</h1>\n\n            <section id=\"job-detail\">\n                {jobDetailComponent}\n                {favoriteButtonComponent}\n                {funcComp}\n            </section>\n\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}